return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
# "hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
#
#     if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
#
# found %>%
#   mutate(
#     valid = map2(field, value, validate)
#   )
})
library(stringi)
library(tidyverse)
req_keys <- c("byr", "iyr", "eyr", "hgt", "hcl", "ecl", "pid")
input <- readLines("/tmp/test.txt")
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2] %>%
discard(`==`, 'cid') -> found
all(found %in% req_keys) & (length(found) == length(req_keys))
}) %>%
sum()
validate_height <- function(value) {
matches <- unlist(stri_match_first_regex(value, "^([[:digit:]]{2,3})(cm|in)$"))
print(str(matches))
return(TRUE)
return(
switch(
matches[2],
"cm" = between(as.integer(m[1]), 150, 193),
"in" = between(as.integer(m[1]), 59, 76),
FALSE
)
}
validate <- function(field, value) {
print("[%s] [%s]", field, value)
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
# "hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
#
#     if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
#
# found %>%
#   mutate(
#     valid = map2(field, value, validate)
#   )
})
split(input, findInterval(1:length(input), which(input == ""))) %>%
map(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
#
#     if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
#
found %>%
mutate(
valid = map2(field, value, validate)
)
})
validate <- function(field, value) {
print(str(field))
print(str(value))
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
# "hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
#
#     if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
#
found %>%
mutate(
valid = map2(field, value, validate)
)
})
validate <- function(field, value) {
# print(str(field))
# print(str(value))
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
"hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
#
#     if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
#
found %>%
mutate(
valid = map2(field, value, validate)
)
})
validate_height <- function(value) {
matches <- unlist(stri_match_first_regex(value, "^([[:digit:]]{2,3})(cm|in)$"))
# print(str(matches))
return(
switch(
matches[2],
"cm" = between(as.integer(m[2]), 150, 193),
"in" = between(as.integer(m[2]), 59, 76),
FALSE
)
}
validate <- function(field, value) {
# print(str(field))
# print(str(value))
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
"hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
#
#     if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
#
found %>%
mutate(
valid = map2(field, value, validate)
)
})
validate_height <- function(value) {
matches <- unlist(stri_match_first_regex(value, "^([[:digit:]]{2,3})(cm|in)$"))
# print(str(matches))
return(
switch(
matches[3],
"cm" = between(as.integer(m[2]), 150, 193),
"in" = between(as.integer(m[2]), 59, 76),
FALSE
)
}
validate <- function(field, value) {
# print(str(field))
# print(str(value))
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
"hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
#
#     if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
#
found %>%
mutate(
valid = map2(field, value, validate)
)
})
split(input, findInterval(1:length(input), which(input == ""))) %>%
map(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
#
#     if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
#
return(
found %>%
mutate(
valid = map2(field, value, validate)
)
}) -> x
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
all(map2_lgl(field, value, validate))
})
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
all(map2_lgl(found$field, found$value, validate))
})
validate_height <- function(value) {
matches <- unlist(stri_match_first_regex(value, "^([[:digit:]]{2,3})(cm|in)$"))
# print(str(matches))
return(
switch(
matches[3],
"cm" = between(as.integer(matches[2]), 150, 193),
"in" = between(as.integer(matches[2]), 59, 76),
FALSE
)
}
validate <- function(field, value) {
# print(str(field))
# print(str(value))
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
"hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
all(map2_lgl(found$field, found$value, validate))
})
validate_height <- function(value) {
matches <- unlist(stri_match_first_regex(value, "^([[:digit:]]{2,3})(cm|in)$"))
print(str(matches))
return(
switch(
matches[3],
"cm" = between(as.integer(matches[2]), 150, 193),
"in" = between(as.integer(matches[2]), 59, 76),
FALSE
)
}
validate <- function(field, value) {
# print(str(field))
# print(str(value))
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
"hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
if (!all(found$field %in% req_keys) & (nrow(found) == length(req_keys))) return(FALSE)
all(map2_lgl(found$field, found$value, validate))
})
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
if (!(all(found$field %in% req_keys) & (length(found$field) == length(req_keys)))) return(FALSE)
all(map2_lgl(found$field, found$value, validate))
})
validate_height <- function(value) {
matches <- unlist(stri_match_first_regex(value, "^([[:digit:]]{2,3})(cm|in)$"))
return(
suppressWarnings(
switch(
matches[3],
"cm" = between(as.integer(matches[2]), 150, 193),
"in" = between(as.integer(matches[2]), 59, 76),
FALSE
)
}
validate <- function(field, value) {
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
"hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
if (!(all(found$field %in% req_keys) & (length(found$field) == length(req_keys)))) return(FALSE)
all(map2_lgl(found$field, found$value, validate))
})
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
if (!(all(found$field %in% req_keys) & (length(found$field) == length(req_keys)))) return(FALSE)
all(map2_lgl(found$field, found$value, validate))
}) %>%
sum()
# input <- readLines("/tmp/test.txt")
input <- readLines("../input/04-01.txt")
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2] %>%
discard(`==`, 'cid') -> found
all(found %in% req_keys) & (length(found) == length(req_keys))
}) %>%
sum()
validate_height <- function(value) {
matches <- unlist(stri_match_first_regex(value, "^([[:digit:]]{2,3})(cm|in)$"))
return(
suppressWarnings(
switch(
matches[3],
"cm" = between(as.integer(matches[2]), 150, 193),
"in" = between(as.integer(matches[2]), 59, 76),
FALSE
)
}
validate <- function(field, value) {
return(
suppressWarnings(
switch(
field,
"byr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 1920, 2002),
"iyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2010, 2020),
"eyr" = stri_detect_regex(value, "^[[:digit:]]{4}$") & between(as.integer(value), 2020, 2030),
"hgt" = stri_detect_regex(value, "^[[:digit:]]{2,3}(cm|in)$") & validate_height(value),
"hcl" = stri_detect_regex(value, "^#[a-f[:digit:]]{6}$"),
"ecl" = value %in% c("amb", "blu", "brn", "gry", "grn", "hzl", "oth"),
"pid" = stri_detect_regex(value, "^[[:digit:]]{9}$"),
"cid" = TRUE,
TRUE
)
}
split(input, findInterval(1:length(input), which(input == ""))) %>%
map_lgl(~{
paste0(.x, collapse = " ") %>%
stri_match_all_regex("([[:alpha:]]{3}):([^ $]+)") %>%
pluck(1) %>%
.[,2:3] %>%
as.data.frame() %>%
set_names(c("field", "value")) %>%
filter(field != "cid") -> found
if (!(all(found$field %in% req_keys) & (length(found$field) == length(req_keys)))) return(FALSE)
all(map2_lgl(found$field, found$value, validate))
}) %>%
sum()
reticulate::repl_python()
